{"ast":null,"code":"/* Action */\nconst ZERO = 'ZERO';\nconst ADDONE = 'ADDONE';\nconst ADDTWO = 'ADDTWO';\nconst ADDTHREE = 'ADDTHREE';\nconst ADDFOUR = 'ADDFOUR';\nconst ADDFIVE = 'ADDFIVE';\nconst ADDSIX = 'ADDSIX';\nconst ADDSEVEN = 'ADDSEVEN';\nconst ADDEIGHT = 'ADDEIGHT';\nconst ADDNINE = 'ADDNINE';\nconst RESET = 'RESET';\nconst DIVISION = 'DIVISION';\nconst MULTIPLY = 'MULTIPLY';\nconst EQUAL = 'EQUAL';\nconst DECIMAL = 'DECIMAL';\n/* check for zero */\n\nconst notDivisible = 0;\n/* default reducer state */\n\nconst defaultState = {\n  total: 0,\n  numberArray: [0]\n};\n/* Array of numbers to concat to state object */\n\nconst valZero = [0];\nconst valOne = [1];\nconst valTwo = [2];\nconst valThree = [3];\nconst valFour = [4];\nconst valFive = [5];\nconst valSix = [6];\nconst valSeven = [7];\nconst valEight = [8];\nconst valNine = [9];\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case DIVISION:\n      {\n        return { ...state,\n          numberArray: state.numberArray.concat('+')\n        };\n      }\n\n    case RESET:\n      return {\n        total: state.total = 0,\n        numberArray: state.numberArray = [0]\n      };\n\n    case ZERO:\n      return { ...state,\n        numberArray: state.numberArray.concat(valZero)\n      };\n\n    case ADDONE:\n      return { ...state,\n        numberArray: state.numberArray.concat(valOne)\n      };\n\n    case ADDTWO:\n      return { ...state,\n        numberArray: state.numberArray.concat(valTwo)\n      };\n\n    case ADDTHREE:\n      return { ...state,\n        numberArray: state.numberArray.concat(valThree)\n      };\n\n    case ADDFOUR:\n      return { ...state,\n        numberArray: state.numberArray.concat(valFour)\n      };\n\n    case ADDFIVE:\n      return { ...state,\n        numberArray: state.numberArray.concat(valFive)\n      };\n\n    case ADDSIX:\n      return { ...state,\n        numberArray: state.numberArray.concat(valSix)\n      };\n\n    case ADDSEVEN:\n      return { ...state,\n        numberArray: state.numberArray.concat(valSeven)\n      };\n\n    case ADDEIGHT:\n      return { ...state,\n        numberArray: state.numberArray.concat(valEight)\n      };\n\n    case ADDNINE:\n      return { ...state,\n        numberArray: state.numberArray.concat(valNine)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/cristian/Desktop/mycalculator/src/store/reducer.js"],"names":["ZERO","ADDONE","ADDTWO","ADDTHREE","ADDFOUR","ADDFIVE","ADDSIX","ADDSEVEN","ADDEIGHT","ADDNINE","RESET","DIVISION","MULTIPLY","EQUAL","DECIMAL","notDivisible","defaultState","total","numberArray","valZero","valOne","valTwo","valThree","valFour","valFive","valSix","valSeven","valEight","valNine","reducer","state","action","type","concat"],"mappings":"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","sourcesContent":["/* Action */\nconst ZERO = 'ZERO'\nconst ADDONE = 'ADDONE'\nconst ADDTWO = 'ADDTWO'\nconst ADDTHREE = 'ADDTHREE'\nconst ADDFOUR = 'ADDFOUR'\nconst ADDFIVE = 'ADDFIVE'\nconst ADDSIX = 'ADDSIX'\nconst ADDSEVEN = 'ADDSEVEN'\nconst ADDEIGHT = 'ADDEIGHT'\nconst ADDNINE = 'ADDNINE'\nconst RESET = 'RESET'\nconst DIVISION = 'DIVISION'\nconst MULTIPLY = 'MULTIPLY'\nconst EQUAL = 'EQUAL'\nconst DECIMAL = 'DECIMAL'\n/* check for zero */\nconst notDivisible = 0\n\n/* default reducer state */\nconst defaultState = {\n    total:0,\n    numberArray:[0]\n}\n/* Array of numbers to concat to state object */\nconst valZero = [0];\nconst valOne = [1];\nconst valTwo = [2];\nconst valThree = [3];\nconst valFour = [4];\nconst valFive = [5];\nconst valSix = [6];\nconst valSeven = [7];\nconst valEight = [8];\nconst valNine = [9];\n\nconst reducer = (state = defaultState,action) => {\n\n    switch(action.type){\n        case DIVISION:{\n            return{\n                ...state,\n                numberArray:state.numberArray.concat('+')\n            }\n        }\n        case RESET:\n            return{\n                total:state.total = 0,\n                numberArray:state.numberArray = [0]\n            }\n        case ZERO:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valZero)\n            }\n        case ADDONE:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valOne)\n            }\n        case ADDTWO:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valTwo)\n            }\n        case ADDTHREE:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valThree)\n            }\n        case ADDFOUR:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valFour)\n            }\n        case ADDFIVE:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valFive)\n            }\n        case ADDSIX:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valSix)\n            }\n            case ADDSEVEN:\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valSeven)\n                }\n            case ADDEIGHT:\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valEight)\n                }\n            case ADDNINE:\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valNine)\n                }\n            default:\n                return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}