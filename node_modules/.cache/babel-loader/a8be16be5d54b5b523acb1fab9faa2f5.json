{"ast":null,"code":"/* Action */\nconst ZERO = 'ZERO';\nconst ADDONE = 'ADDONE';\nconst ADDTWO = 'ADDTWO';\nconst ADDTHREE = 'ADDTHREE';\nconst ADDFOUR = 'ADDFOUR';\nconst ADDFIVE = 'ADDFIVE';\nconst ADDSIX = 'ADDSIX';\nconst ADDSEVEN = 'ADDSEVEN';\nconst ADDEIGHT = 'ADDEIGHT';\nconst ADDNINE = 'ADDNINE';\nconst RESET = 'RESET';\nconst DIVISION = 'DIVISION';\nconst MULTIPLY = 'MULTIPLY';\nconst EQUAL = 'EQUAL';\nconst DECIMAL = 'DECIMAL';\nconst SUBTRACT = 'SUBTRACT';\n/* check for zero */\n\nconst notDivisible = 0;\n/* default reducer state */\n\nconst defaultState = {\n  total: 0,\n  numberArray: [0]\n};\n/* Array of numbers to concat to state object */\n\nconst valZero = [0];\nconst valOne = [1];\nconst valTwo = [2];\nconst valThree = [3];\nconst valFour = [4];\nconst valFive = [5];\nconst valSix = [6];\nconst valSeven = [7];\nconst valEight = [8];\nconst valNine = [9];\nconst opSub = ['-'];\nconst len = state.numberArray.length;\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case SUBTRACT:\n      {\n        if (state.numberArray[0] === 0) {\n          return { ...state,\n            numberArray: state.numberArray[0] = opSub\n          };\n        } else if (state.numberArray[len - 1] == opSub && state.numberArray[len]) {\n          return { ...state,\n            numberArray: state.numberArray\n          };\n        } else {\n          return { ...state,\n            numberArray: state.numberArray.concat('-')\n          };\n        }\n      }\n\n    case EQUAL:\n      {\n        return { ...state,\n          numberArray: state.numberArray.concat('=')\n        };\n      }\n\n    case MULTIPLY:\n      {\n        return { ...state,\n          numberArray: state.numberArray.concat('X')\n        };\n      }\n\n    case DECIMAL:\n      {\n        return { ...state,\n          numberArray: state.numberArray.concat('.')\n        };\n      }\n\n    case DIVISION:\n      {\n        return { ...state,\n          numberArray: state.numberArray.concat('/')\n        };\n      }\n\n    case RESET:\n      return {\n        total: state.total = 0,\n        numberArray: state.numberArray = [0]\n      };\n\n    case ZERO:\n      return { ...state,\n        numberArray: state.numberArray.concat(valZero)\n      };\n\n    case ADDONE:\n      if (state.numberArray[0] === 0) {\n        return { ...state,\n          numberArray: state.numberArray[0] = valOne\n        };\n      }\n\n      return { ...state,\n        numberArray: state.numberArray.concat(valOne)\n      };\n\n    case ADDTWO:\n      if (state.numberArray[0] === 0) {\n        return { ...state,\n          numberArray: state.numberArray[0] = valTwo\n        };\n      }\n\n      return { ...state,\n        numberArray: state.numberArray.concat(valTwo)\n      };\n\n    case ADDTHREE:\n      if (state.numberArray[0] === 0) {\n        return { ...state,\n          numberArray: state.numberArray[0] = valThree\n        };\n      }\n\n      return { ...state,\n        numberArray: state.numberArray.concat(valThree)\n      };\n\n    case ADDFOUR:\n      if (state.numberArray[0] === 0) {\n        return { ...state,\n          numberArray: state.numberArray[0] = valFour\n        };\n      }\n\n      return { ...state,\n        numberArray: state.numberArray.concat(valFour)\n      };\n\n    case ADDFIVE:\n      if (state.numberArray[0] === 0) {\n        return { ...state,\n          numberArray: state.numberArray[0] = valFive\n        };\n      }\n\n      return { ...state,\n        numberArray: state.numberArray.concat(valFive)\n      };\n\n    case ADDSIX:\n      if (state.numberArray[0] === 0) {\n        return { ...state,\n          numberArray: state.numberArray[0] = valSix\n        };\n      }\n\n      return { ...state,\n        numberArray: state.numberArray.concat(valSix)\n      };\n\n    case ADDSEVEN:\n      if (state.numberArray[0] === 0) {\n        return { ...state,\n          numberArray: state.numberArray[0] = valSeven\n        };\n      }\n\n      return { ...state,\n        numberArray: state.numberArray.concat(valSeven)\n      };\n\n    case ADDEIGHT:\n      if (state.numberArray[0] === 0) {\n        return { ...state,\n          numberArray: state.numberArray[0] = valEight\n        };\n      }\n\n      return { ...state,\n        numberArray: state.numberArray.concat(valEight)\n      };\n\n    case ADDNINE:\n      if (state.numberArray[0] === 0) {\n        return { ...state,\n          numberArray: state.numberArray[0] = valNine\n        };\n      }\n\n      return { ...state,\n        numberArray: state.numberArray.concat(valNine)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/cristian/Desktop/mycalculator/src/store/reducer.js"],"names":["ZERO","ADDONE","ADDTWO","ADDTHREE","ADDFOUR","ADDFIVE","ADDSIX","ADDSEVEN","ADDEIGHT","ADDNINE","RESET","DIVISION","MULTIPLY","EQUAL","DECIMAL","SUBTRACT","notDivisible","defaultState","total","numberArray","valZero","valOne","valTwo","valThree","valFour","valFive","valSix","valSeven","valEight","valNine","opSub","len","state","length","reducer","action","type","concat"],"mappings":"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","sourcesContent":["/* Action */\nconst ZERO = 'ZERO'\nconst ADDONE = 'ADDONE'\nconst ADDTWO = 'ADDTWO'\nconst ADDTHREE = 'ADDTHREE'\nconst ADDFOUR = 'ADDFOUR'\nconst ADDFIVE = 'ADDFIVE'\nconst ADDSIX = 'ADDSIX'\nconst ADDSEVEN = 'ADDSEVEN'\nconst ADDEIGHT = 'ADDEIGHT'\nconst ADDNINE = 'ADDNINE'\nconst RESET = 'RESET'\nconst DIVISION = 'DIVISION'\nconst MULTIPLY = 'MULTIPLY'\nconst EQUAL = 'EQUAL'\nconst DECIMAL = 'DECIMAL'\nconst SUBTRACT = 'SUBTRACT'\n/* check for zero */\nconst notDivisible = 0\n\n/* default reducer state */\nconst defaultState = {\n    total:0,\n    numberArray:[0]\n}\n/* Array of numbers to concat to state object */\nconst valZero = [0];\nconst valOne = [1];\nconst valTwo = [2];\nconst valThree = [3];\nconst valFour = [4];\nconst valFive = [5];\nconst valSix = [6];\nconst valSeven = [7];\nconst valEight = [8];\nconst valNine = [9];\nconst opSub = ['-'];\nconst len = state.numberArray.length;\n\nconst reducer = (state = defaultState,action) => {\n\n    switch(action.type){\n        \n        case SUBTRACT:{\n\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = opSub\n                }\n            }\n            else if(state.numberArray[len-1] == opSub && state.numberArray[len]){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat('-')\n                }\n            }\n        }\n        case EQUAL:{\n            return{\n                ...state,\n                numberArray:state.numberArray.concat('=')\n            }\n        }\n        case MULTIPLY:{\n            return{\n                ...state,\n                numberArray:state.numberArray.concat('X')\n            }\n        }\n        case DECIMAL:{\n            return{\n                ...state,\n                numberArray:state.numberArray.concat('.')\n            }\n        }\n        case DIVISION:{\n            return{\n                ...state,\n                numberArray:state.numberArray.concat('/')\n            }\n        }\n        case RESET:\n            return{\n                total:state.total = 0,\n                numberArray:state.numberArray = [0]\n            }\n        case ZERO:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valZero)\n            }\n        case ADDONE:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valOne\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valOne)\n            }\n        case ADDTWO:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valTwo\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valTwo)\n            }\n        case ADDTHREE:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valThree\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valThree)\n            }\n        case ADDFOUR:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valFour\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valFour)\n            }\n        case ADDFIVE:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valFive\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valFive)\n            }\n        case ADDSIX:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valSix\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valSix)\n            }\n            case ADDSEVEN:\n                if(state.numberArray[0] === 0){\n                    return{\n                        ...state,\n                        numberArray:state.numberArray[0] = valSeven\n                    }\n                }\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valSeven)\n                }\n            case ADDEIGHT:\n                if(state.numberArray[0] === 0){\n                    return{\n                        ...state,\n                        numberArray:state.numberArray[0] = valEight\n                    }\n                }\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valEight)\n                }\n            case ADDNINE:\n                if(state.numberArray[0] === 0){\n                    return{\n                        ...state,\n                        numberArray:state.numberArray[0] = valNine\n                    }\n                }\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valNine)\n                }\n            default:\n                return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}