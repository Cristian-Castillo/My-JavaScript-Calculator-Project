{"ast":null,"code":"/* Action */\nconst ADDONE = 'ADDONE';\nconst ADDTWO = 'ADDTWO';\nconst RESET = 'RESET';\nconst DIVISION = 'DIVISION';\nconst MULTIPLY = 'MULTIPLY';\nconst EQUAL = 'EQUAL';\nconst DECIMAL = 'DECIMAL';\n/* check for zero */\n\nconst notDivisible = 0;\n/* default reducer state */\n\nconst defaultState = {\n  total: 0,\n  numberArray: [0]\n};\n\nconst reducer = (state = defaultState, action) => {\n  if (EQUAL == action.type) {\n    console.log('equls');\n  }\n\n  switch (action.type) {\n    case ADDONE:\n      if (state.numberArray[0] === 0) {\n        state.numberArray = state.numberArray[0] = 1;\n      } else {\n        const getLength = state.numberArray;\n        state.numberArray = state.numberArray[getLength] = 1;\n      }\n\n      break;\n\n    case ADDTWO:\n      if (state.numberArray[0] === 0) {\n        state.numberArray[0] = 2;\n      } else {\n        state.numberArray.push(2);\n      }\n\n      break;\n  }\n\n  return { ...state\n  };\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/cristian/Desktop/mycalculator/src/store/reducer.js"],"names":["ADDONE","ADDTWO","RESET","DIVISION","MULTIPLY","EQUAL","DECIMAL","notDivisible","defaultState","total","numberArray","reducer","state","action","type","console","log","getLength","push"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA;;AACA,MAAMC,YAAY,GAAG,CAArB;AAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,CADW;AAEjBC,EAAAA,WAAW,EAAC,CAAC,CAAD;AAFK,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAsBK,MAAtB,KAAiC;AAE7C,MAAGR,KAAK,IAAIQ,MAAM,CAACC,IAAnB,EAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAED,UAAOH,MAAM,CAACC,IAAd;AACI,SAAKd,MAAL;AACI,UAAGY,KAAK,CAACF,WAAN,CAAkB,CAAlB,MAAyB,CAA5B,EAA8B;AAC3BE,QAAAA,KAAK,CAACF,WAAN,GAAoBE,KAAK,CAACF,WAAN,CAAkB,CAAlB,IAAuB,CAA3C;AACF,OAFD,MAGI;AACA,cAAMO,SAAS,GAAGL,KAAK,CAACF,WAAxB;AACAE,QAAAA,KAAK,CAACF,WAAN,GAAoBE,KAAK,CAACF,WAAN,CAAkBO,SAAlB,IAA+B,CAAnD;AACH;;AACD;;AACJ,SAAKhB,MAAL;AACI,UAAGW,KAAK,CAACF,WAAN,CAAkB,CAAlB,MAAyB,CAA5B,EAA8B;AAC1BE,QAAAA,KAAK,CAACF,WAAN,CAAkB,CAAlB,IAAuB,CAAvB;AACH,OAFD,MAGI;AACAE,QAAAA,KAAK,CAACF,WAAN,CAAkBQ,IAAlB,CAAuB,CAAvB;AACH;;AACD;AAjBR;;AAoBA,SAAM,EACF,GAAGN;AADD,GAAN;AAGH,CA7BD;;AA+BA,eAAeD,OAAf","sourcesContent":["/* Action */\nconst ADDONE = 'ADDONE'\nconst ADDTWO = 'ADDTWO'\nconst RESET = 'RESET'\nconst DIVISION = 'DIVISION'\nconst MULTIPLY = 'MULTIPLY'\nconst EQUAL = 'EQUAL'\nconst DECIMAL = 'DECIMAL'\n/* check for zero */\nconst notDivisible = 0\n\n/* default reducer state */\nconst defaultState = {\n    total:0,\n    numberArray:[0]\n}\n\nconst reducer = (state = defaultState,action) => {\n\n    if(EQUAL == action.type){\n        console.log('equls')\n    }\n\n    switch(action.type){\n        case ADDONE:\n            if(state.numberArray[0] === 0){\n               state.numberArray = state.numberArray[0] = 1\n            }\n            else{\n                const getLength = state.numberArray\n                state.numberArray = state.numberArray[getLength] = 1\n            }\n            break;\n        case ADDTWO:\n            if(state.numberArray[0] === 0){\n                state.numberArray[0] = 2\n            }\n            else{\n                state.numberArray.push(2)\n            }\n            break;\n    }\n    \n    return{\n        ...state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}