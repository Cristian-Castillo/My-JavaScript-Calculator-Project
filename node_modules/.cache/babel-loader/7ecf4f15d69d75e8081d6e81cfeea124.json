{"ast":null,"code":"import _objectSpread from\"/Users/cristian/Desktop/My-JavaScript-Calculator-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* Action Digits */var ZERO='ZERO';var ADDONE='ADDONE';var ADDTWO='ADDTWO';var ADDTHREE='ADDTHREE';var ADDFOUR='ADDFOUR';var ADDFIVE='ADDFIVE';var ADDSIX='ADDSIX';var ADDSEVEN='ADDSEVEN';var ADDEIGHT='ADDEIGHT';var ADDNINE='ADDNINE';/* Action Operations */var ADD='ADD';var RESET='RESET';var DIVISION='DIVISION';var MULTIPLY='MULTIPLY';var EQUAL='EQUAL';var DECIMAL='DECIMAL';var SUBTRACT='SUBTRACT';/* check for zero */var notDivisible=0;/* Resets the Equal Sign for reuse*/var flag=false;/* default reducer state & array */var defaultState={total:0,numberArray:[0]};/* Array of numbers to concat to state object */var valZero=[0];var valOne=[1];var valTwo=[2];var valThree=[3];var valFour=[4];var valFive=[5];var valSix=[6];var valSeven=[7];var valEight=[8];var valNine=[9];var opSub=['-'];var opMult=['X'];var opDec=['.'];var opDiv=['/'];var opAdd=['+'];var opEqual=['='];var opNan=['NAN'];var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case EQUAL:{// const len = state.numberArray.length;\n// const tempAry = [...state.numberArray]\n// for(let i = 0; i < len;i++){\n// }\n//     if(state.numberArray[0] === 0){\n//         return{\n//             ...state,\n//             numberArray:state.numberArray = opNan\n//         }\n//     }\n//     /* If repeated sequential presses to equal return NAN */\n//     else if(state.numberArray[len-1] == opNan){\n//         return{\n//             ...state,\n//             numberArray:state.numberArray\n//         }\n//     }\n//     /* If n display that n = n, edge condition inplaced if \n//     = is hit consecutively */\n//     else if(state.numberArray[0] != opEqual){\n//         if(flag == true){\n//             return {\n//                 ...state\n//             }\n//         }\n//         flag = true\n//         return{\n//             ...state,\n//             numberArray:[...state.numberArray,opEqual,state.numberArray]\n//         }\n//     }\n//    else{\n//        console.log(state.numberArray)\n//    }\n}case SUBTRACT:{var len=state.numberArray.length;/* If first entry is - then change to sub */if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=opSub});}/* if n and n+1 is equal to - then just return unchanged*/else if(state.numberArray[len-1]==opSub){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray});}/* Else n and n+1 in array are different and concat */else{return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(opSub)});}}case ADD:{var _len=state.numberArray.length;/* If first entry is + then change to sub */if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=opAdd});}/* if n and n+1 is equal to + then just return unchanged*/else if(state.numberArray[_len-1]==opAdd){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray});}/* Else n and n+1 in array are different and concat */else{return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(opAdd)});}}case MULTIPLY:{var _len2=state.numberArray.length;/* If first entry is * then change to mult */if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray});}/* if n and n+1 is equal to * then just return unchanged */else if(state.numberArray[_len2-1]==opMult){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray});}/* Else n and n+1 in array are different and concat */else{return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(opMult)});}}case DECIMAL:{var _len3=state.numberArray.length;if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(opDec)});}else{return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray});}}case DIVISION:{var _len4=state.numberArray.length;/* If first entry is div  then change to mult */if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray});}/* if n and n+1 is equal to div then just return unchanged */else if(state.numberArray[_len4-1]==opDiv){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray});}/* Else n and n+1 in array are different and concat */else{return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(opDiv)});}}case RESET:/* Reset the flag for EQUAL*/flag=false;return{total:state.total=0,numberArray:state.numberArray=[0]};case ZERO:return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valZero)});case ADDONE:if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=valOne});}return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valOne)});case ADDTWO:if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=valTwo});}return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valTwo)});case ADDTHREE:if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=valThree});}return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valThree)});case ADDFOUR:if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=valFour});}return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valFour)});case ADDFIVE:if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=valFive});}return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valFive)});case ADDSIX:if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=valSix});}return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valSix)});case ADDSEVEN:if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=valSeven});}return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valSeven)});case ADDEIGHT:if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=valEight});}return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valEight)});case ADDNINE:if(state.numberArray[0]===0){return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray[0]=valNine});}return _objectSpread(_objectSpread({},state),{},{numberArray:state.numberArray.concat(valNine)});default:return state;}};export default reducer;","map":{"version":3,"sources":["/Users/cristian/Desktop/My-JavaScript-Calculator-Project/src/store/reducer.js"],"names":["ZERO","ADDONE","ADDTWO","ADDTHREE","ADDFOUR","ADDFIVE","ADDSIX","ADDSEVEN","ADDEIGHT","ADDNINE","ADD","RESET","DIVISION","MULTIPLY","EQUAL","DECIMAL","SUBTRACT","notDivisible","flag","defaultState","total","numberArray","valZero","valOne","valTwo","valThree","valFour","valFive","valSix","valSeven","valEight","valNine","opSub","opMult","opDec","opDiv","opAdd","opEqual","opNan","reducer","state","action","type","len","length","concat"],"mappings":"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","sourcesContent":["/* Action Digits */\nconst ZERO = 'ZERO'\nconst ADDONE = 'ADDONE'\nconst ADDTWO = 'ADDTWO'\nconst ADDTHREE = 'ADDTHREE'\nconst ADDFOUR = 'ADDFOUR'\nconst ADDFIVE = 'ADDFIVE'\nconst ADDSIX = 'ADDSIX'\nconst ADDSEVEN = 'ADDSEVEN'\nconst ADDEIGHT = 'ADDEIGHT'\nconst ADDNINE = 'ADDNINE'\n\n/* Action Operations */\nconst ADD = 'ADD'\nconst RESET = 'RESET'\nconst DIVISION = 'DIVISION'\nconst MULTIPLY = 'MULTIPLY'\nconst EQUAL = 'EQUAL'\nconst DECIMAL = 'DECIMAL'\nconst SUBTRACT = 'SUBTRACT'\n\n/* check for zero */\nconst notDivisible = 0\n\n/* Resets the Equal Sign for reuse*/\nlet flag = false;\n\n/* default reducer state & array */\nconst defaultState = {\n    total:0,\n    numberArray:[0]\n}\n\n/* Array of numbers to concat to state object */\nconst valZero = [0];\nconst valOne = [1];\nconst valTwo = [2];\nconst valThree = [3];\nconst valFour = [4];\nconst valFive = [5];\nconst valSix = [6];\nconst valSeven = [7];\nconst valEight = [8];\nconst valNine = [9];\nconst opSub = ['-'];\nconst opMult = ['X'];\nconst opDec = ['.'];\nconst opDiv = ['/'];\nconst opAdd = ['+'];\nconst opEqual = ['='];\nconst opNan = ['NAN'];\n\n\nconst reducer = (state = defaultState,action) => {\n\n    switch(action.type){\n\n        case EQUAL:{\n\n            // const len = state.numberArray.length;\n            // const tempAry = [...state.numberArray]\n\n            // for(let i = 0; i < len;i++){\n\n            // }\n    \n        //     if(state.numberArray[0] === 0){\n        //         return{\n        //             ...state,\n        //             numberArray:state.numberArray = opNan\n        //         }\n        //     }\n        //     /* If repeated sequential presses to equal return NAN */\n        //     else if(state.numberArray[len-1] == opNan){\n        //         return{\n        //             ...state,\n        //             numberArray:state.numberArray\n        //         }\n        //     }\n        //     /* If n display that n = n, edge condition inplaced if \n        //     = is hit consecutively */\n        //     else if(state.numberArray[0] != opEqual){\n        //         if(flag == true){\n        //             return {\n        //                 ...state\n        //             }\n        //         }\n        //         flag = true\n        //         return{\n        //             ...state,\n        //             numberArray:[...state.numberArray,opEqual,state.numberArray]\n        //         }\n        //     }\n        //    else{\n        //        console.log(state.numberArray)\n        //    }\n        }\n        case SUBTRACT:{\n            const len = state.numberArray.length;\n            /* If first entry is - then change to sub */\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = opSub\n                }\n            } \n            /* if n and n+1 is equal to - then just return unchanged*/\n            else if(state.numberArray[len-1] == opSub){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n            /* Else n and n+1 in array are different and concat */\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opSub)\n                }\n            }\n        }\n        case ADD:{\n            const len = state.numberArray.length;\n            /* If first entry is + then change to sub */\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = opAdd\n                }\n            }\n            /* if n and n+1 is equal to + then just return unchanged*/\n            else if(state.numberArray[len-1] == opAdd){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n            /* Else n and n+1 in array are different and concat */\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opAdd)\n                }\n            }\n        }\n        case MULTIPLY:{\n            const len = state.numberArray.length;\n            /* If first entry is * then change to mult */\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            } \n            /* if n and n+1 is equal to * then just return unchanged */\n            else if(state.numberArray[len-1] == opMult){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n            /* Else n and n+1 in array are different and concat */\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opMult)\n                }\n            }\n        }\n        case DECIMAL:{\n            const len = state.numberArray.length;\n            \n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opDec)\n                }\n            }\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n        }\n        case DIVISION:{\n            const len = state.numberArray.length;\n            /* If first entry is div  then change to mult */\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            } \n            /* if n and n+1 is equal to div then just return unchanged */\n            else if(state.numberArray[len-1] == opDiv){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n            /* Else n and n+1 in array are different and concat */\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opDiv)\n                }\n            }\n        }\n        case RESET:\n            /* Reset the flag for EQUAL*/\n            flag = false\n            return{\n                total:state.total = 0,\n                numberArray:state.numberArray = [0]\n            }\n        case ZERO:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valZero)\n            }\n        case ADDONE:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valOne\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valOne)\n            }\n        case ADDTWO:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valTwo\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valTwo)\n            }\n        case ADDTHREE:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valThree\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valThree)\n            }\n        case ADDFOUR:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valFour\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valFour)\n            }\n        case ADDFIVE:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valFive\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valFive)\n            }\n        case ADDSIX:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valSix\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valSix)\n            }\n            case ADDSEVEN:\n                if(state.numberArray[0] === 0){\n                    return{\n                        ...state,\n                        numberArray:state.numberArray[0] = valSeven\n                    }\n                }\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valSeven)\n                }\n            case ADDEIGHT:\n                if(state.numberArray[0] === 0){\n                    return{\n                        ...state,\n                        numberArray:state.numberArray[0] = valEight\n                    }\n                }\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valEight)\n                }\n            case ADDNINE:\n                if(state.numberArray[0] === 0){\n                    return{\n                        ...state,\n                        numberArray:state.numberArray[0] = valNine\n                    }\n                }\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valNine)\n                }\n            default:\n                return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}