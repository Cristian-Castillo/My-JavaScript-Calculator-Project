{"version":3,"sources":["store/reducer.js","components/CalculatorContainer.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","total","numberArray","valZero","valOne","valTwo","valThree","valFour","valFive","valSix","valSeven","valEight","valNine","opSub","opMult","opDec","opDiv","opAdd","reducer","state","action","type","len","length","concat","CalculatorContainer","props","this","storeTotal","displayArray","storeArray","setDiv","division","setAdd","add","setReset","reset","setMultiply","multiply","setSubtract","subtract","setDecimal","decimal","setEqual","equal","addZero","addOne","addTwo","addThree","addFour","addFive","addSix","addSeven","addEight","addNine","styleButton","backgroundColor","border","className","style","onClick","borderBottom","borderTop","Component","connect","dispatch","App","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sQA4BMA,EAAe,CACjBC,MAAM,EACNC,YAAY,CAAC,IAIXC,EAAU,CAAC,GACXC,EAAS,CAAC,GACVC,EAAS,CAAC,GACVC,EAAW,CAAC,GACZC,EAAU,CAAC,GACXC,EAAU,CAAC,GACXC,EAAS,CAAC,GACVC,EAAW,CAAC,GACZC,EAAW,CAAC,GACZC,EAAU,CAAC,GACXC,EAAQ,CAAC,KACTC,EAAS,CAAC,KACVC,EAAQ,CAAC,KACTC,EAAQ,CAAC,KACTC,EAAQ,CAAC,KAqRAC,EAhRC,WAAkC,IAAjCC,EAAgC,uDAAxBnB,EAAaoB,EAAW,uCAE7C,OAAOA,EAAOC,MAEV,IAxCM,QAgFN,IA9ES,WA+EL,IAAMC,EAAMH,EAAMjB,YAAYqB,OAE9B,OAA4B,IAAzBJ,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKW,IAInCM,EAAMjB,YAAYoB,EAAI,IAAMT,EAChC,2BACOM,GADP,IAEIjB,YAAYiB,EAAMjB,cAKtB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOX,KAIjD,IA5GI,MA6GA,IAAMS,EAAMH,EAAMjB,YAAYqB,OAE9B,OAA4B,IAAzBJ,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKe,IAInCE,EAAMjB,YAAYoB,EAAI,IAAML,EAChC,2BACOE,GADP,IAEIjB,YAAYiB,EAAMjB,cAKtB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOP,KAIjD,IAjIS,WAkIL,IAAMK,EAAMH,EAAMjB,YAAYqB,OAE9B,OAA4B,IAAzBJ,EAAMjB,YAAY,IAObiB,EAAMjB,YAAYoB,EAAI,IAAMR,EANhC,2BACOK,GADP,IAEIjB,YAAYiB,EAAMjB,cAYtB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOV,KAIjD,IAvJQ,UAwJQK,EAAMjB,YAAYqB,OAE9B,OAA4B,IAAzBJ,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOT,KAIzC,2BACOI,GADP,IAEIjB,YAAYiB,EAAMjB,cAI9B,IA1KS,WA2KL,IAAMoB,EAAMH,EAAMjB,YAAYqB,OAE9B,OAA4B,IAAzBJ,EAAMjB,YAAY,IAObiB,EAAMjB,YAAYoB,EAAI,IAAMN,EANhC,2BACOG,GADP,IAEIjB,YAAYiB,EAAMjB,cAYtB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOR,KAIjD,IAnMM,QAsMF,OADO,EACD,CACFf,MAAMkB,EAAMlB,MAAQ,EACpBC,YAAYiB,EAAMjB,YAAc,CAAC,IAEzC,IAvNK,OAwND,kCACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOrB,KAE7C,IA3NO,SA4NH,OAA4B,IAAzBgB,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKE,IAG3C,2BACOe,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOpB,KAE7C,IArOO,SAsOH,OAA4B,IAAzBe,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKG,IAG3C,2BACOc,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOnB,KAE7C,IA/OS,WAgPL,OAA4B,IAAzBc,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKI,IAG3C,2BACOa,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOlB,KAE7C,IAzPQ,UA0PJ,OAA4B,IAAzBa,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKK,IAG3C,2BACOY,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOjB,KAE7C,IAnQQ,UAoQJ,OAA4B,IAAzBY,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKM,IAG3C,2BACOW,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOhB,KAE7C,IA7QO,SA8QH,OAA4B,IAAzBW,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKO,IAG3C,2BACOU,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOf,KAEzC,IAvRK,WAwRD,OAA4B,IAAzBU,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKQ,IAG3C,2BACOS,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOd,KAE7C,IAjSK,WAkSD,OAA4B,IAAzBS,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKS,IAG3C,2BACOQ,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOb,KAE7C,IA3SI,UA4SA,OAA4B,IAAzBQ,EAAMjB,YAAY,GACjB,2BACOiB,GADP,IAEIjB,YAAYiB,EAAMjB,YAAY,GAAKU,IAG3C,2BACOO,GADP,IAEIjB,YAAYiB,EAAMjB,YAAYsB,OAAOZ,KAE7C,QACI,OAAOO,I,wCC7TjBM,G,wDAEF,WAAYC,GAAO,uCACTA,G,qDAMgBC,KAAKD,MAAME,WAAjC,IACMC,EAAeF,KAAKD,MAAMI,WAC1BC,EAASJ,KAAKD,MAAMM,SACpBC,EAASN,KAAKD,MAAMQ,IACpBC,EAAWR,KAAKD,MAAMU,MACtBC,EAAcV,KAAKD,MAAMY,SACzBC,EAAcZ,KAAKD,MAAMc,SACzBC,EAAad,KAAKD,MAAMgB,QACxBC,EAAWhB,KAAKD,MAAMkB,MACtBC,EAAUlB,KAAKD,MAAMmB,QACrBC,EAASnB,KAAKD,MAAMoB,OACpBC,EAASpB,KAAKD,MAAMqB,OACpBC,EAAWrB,KAAKD,MAAMsB,SACtBC,EAAUtB,KAAKD,MAAMuB,QACrBC,EAAUvB,KAAKD,MAAMwB,QACrBC,EAASxB,KAAKD,MAAMyB,OACpBC,EAAWzB,KAAKD,MAAM0B,SACtBC,EAAW1B,KAAKD,MAAM2B,SACtBC,EAAU3B,KAAKD,MAAM4B,QAGrBC,EAAc,CAChBC,gBAAgB,qBAChBC,OAAO,oBAeX,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,wBAAwB7B,GACnC,yBAAK6B,UAAU,WAAW7B,IAE9B,yBAAK8B,MAAQ,CAACH,gBAAgB,UAAWE,UAAU,OAC/C,yBAAKA,UAAU,QAAQC,MAAQ,CAACF,OAAO,mBAAmBD,gBAAgB,qBAAsB,4BAAQE,UAAW,WAAWE,QAAWzB,GAAzC,OAChG,yBAAKuB,UAAU,QAAQC,MAAQJ,GAAa,4BAAQG,UAAY,iBAAiBE,QAAU7B,GAA/C,MAC5C,yBAAK2B,UAAU,QAAQC,MAAQJ,GAAa,4BAAQG,UAAW,aAAaE,QAAUvB,GAA1C,OAEhD,yBAAKqB,UAAU,OACX,yBAAKA,UAAU,QAAQC,MAAQJ,GAAa,4BAAQG,UAAU,YAAYE,QAAUR,GAAxC,MAC5C,yBAAKM,UAAU,QAAQC,MAAQJ,GAAa,4BAAQG,UAAU,YAAYE,QAAUP,GAAxC,MAC5C,yBAAKK,UAAU,QAAQC,MAAQJ,GAAa,4BAAQG,UAAU,WAAWE,QAAUN,GAAvC,MAC5C,yBAAKI,UAAU,QAAQC,MAAQJ,GAAa,4BAAQG,UAAU,SAASE,QAAUrB,GAArC,OAEhD,yBAAKmB,UAAU,OACX,yBAAKC,MAAQJ,EAAaG,UAAU,SAAQ,4BAAQA,UAAU,WAAWE,QAAUX,GAAvC,MAC5C,yBAAKU,MAAQJ,EAAaG,UAAU,SAAQ,4BAAQA,UAAU,WAAWE,QAAUV,GAAvC,MAC5C,yBAAKS,MAAQJ,EAAaG,UAAU,SAAQ,4BAAQA,UAAU,UAAUE,QAAUT,GAAtC,MAC5C,yBAAKQ,MAAQJ,EAAaG,UAAU,SAAQ,4BAAQA,UAAU,SAASE,QAAU3B,GAArC,OAEhD,yBAAKyB,UAAU,OACX,yBAAKC,MAAQJ,EAAaG,UAAU,SAAQ,4BAAQA,UAAU,UAAUE,QAAWd,GAAvC,MAC5C,yBAAKa,MAAQJ,EAAaG,UAAU,SAAQ,4BAAQA,UAAU,UAAUE,QAAUb,GAAtC,MAC5C,yBAAKY,MAAQJ,EAAaG,UAAU,SAAQ,4BAAQA,UAAU,YAAYE,QAAUZ,GAAxC,MAC5C,yBAAKW,MAlCQ,CACrBH,gBAAgB,qBAChBC,OAAO,mBACPI,aAAa,QA+B0BH,UAAU,SAAQ,4BAAQA,UAAU,WAAWE,QAAUjB,GAAvC,OAErD,yBAAKe,UAAU,OACX,yBAAKC,MAAQJ,EAAaG,UAAU,SAAQ,4BAAQA,UAAU,WAAWE,QAAUf,GAAvC,MAC5C,yBAAKc,MAAQJ,EAAaG,UAAU,SAAQ,4BAAQA,UAAU,SAASE,QAAUnB,GAArC,MAC5C,yBAAKkB,MA7CK,CAClBH,gBAAgB,qBAChBC,OAAO,mBACPK,UAAU,QA0C0BJ,UAAU,gB,GA/ExBK,cAoHnBC,eA9BS,SAAC7C,GACrB,MAAM,CACFS,WAAWT,EAAMlB,MACjB6B,WAAWX,EAAMjB,gBAKE,SAAC+D,GACxB,MAAM,CACF7B,MAAM,WAAO6B,EAAS,CAAC5C,KAAK,WAC5BW,SAAS,WAAOiC,EAAS,CAAC5C,KAAK,cAC/BiB,SAAS,WAAO2B,EAAS,CAAC5C,KAAK,cAC/BuB,MAAM,WAAOqB,EAAS,CAAC5C,KAAK,WAC5Ba,IAAI,WAAO+B,EAAS,CAAC5C,KAAK,SAC1BqB,QAAQ,WAAOuB,EAAS,CAAC5C,KAAK,aAC9BmB,SAAS,WAAOyB,EAAS,CAAC5C,KAAK,cAC/BwB,QAAQ,WAAOoB,EAAS,CAAC5C,KAAK,UAC9ByB,OAAO,WAAOmB,EAAS,CAAC5C,KAAK,YAC7B0B,OAAO,WAAOkB,EAAS,CAAC5C,KAAK,YAC7B2B,SAAS,WAAOiB,EAAS,CAAC5C,KAAK,cAC/B4B,QAAQ,WAAOgB,EAAS,CAAC5C,KAAK,aAC9B6B,QAAQ,WAAOe,EAAS,CAAC5C,KAAK,aAC9B8B,OAAO,WAAOc,EAAS,CAAC5C,KAAK,YAC7B+B,SAAS,WAAOa,EAAS,CAAC5C,KAAK,cAC/BgC,SAAS,WAAOY,EAAS,CAAC5C,KAAK,cAC/BiC,QAAQ,WAAOW,EAAS,CAAC5C,KAAK,gBAIvB2C,CAA4CvC,G,MC1G5CyC,MAVf,WACE,OACE,yBAAKR,UAAU,OACb,yBAAKA,UAAY,cACf,kBAAC,EAAD,SCIYS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNN,IAAMC,EAAQC,YAAYvD,GAE1BwD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACA,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,QAGFK,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bf806a35.chunk.js","sourcesContent":["/* Action Digits */\nconst ZERO = 'ZERO'\nconst ADDONE = 'ADDONE'\nconst ADDTWO = 'ADDTWO'\nconst ADDTHREE = 'ADDTHREE'\nconst ADDFOUR = 'ADDFOUR'\nconst ADDFIVE = 'ADDFIVE'\nconst ADDSIX = 'ADDSIX'\nconst ADDSEVEN = 'ADDSEVEN'\nconst ADDEIGHT = 'ADDEIGHT'\nconst ADDNINE = 'ADDNINE'\n\n/* Action Operations */\nconst ADD = 'ADD'\nconst RESET = 'RESET'\nconst DIVISION = 'DIVISION'\nconst MULTIPLY = 'MULTIPLY'\nconst EQUAL = 'EQUAL'\nconst DECIMAL = 'DECIMAL'\nconst SUBTRACT = 'SUBTRACT'\n\n/* check for zero */\nconst notDivisible = 0\n\n/* Resets the Equal Sign for reuse*/\nlet flag = false;\n\n/* default reducer state & array */\nconst defaultState = {\n    total:0,\n    numberArray:[0]\n}\n\n/* Array of numbers to concat to state object */\nconst valZero = [0];\nconst valOne = [1];\nconst valTwo = [2];\nconst valThree = [3];\nconst valFour = [4];\nconst valFive = [5];\nconst valSix = [6];\nconst valSeven = [7];\nconst valEight = [8];\nconst valNine = [9];\nconst opSub = ['-'];\nconst opMult = ['X'];\nconst opDec = ['.'];\nconst opDiv = ['/'];\nconst opAdd = ['+'];\nconst opEqual = ['='];\nconst opNan = ['NAN'];\n\n\nconst reducer = (state = defaultState,action) => {\n\n    switch(action.type){\n\n        case EQUAL:{\n\n            // const len = state.numberArray.length;\n            // const tempAry = [...state.numberArray]\n\n            // for(let i = 0; i < len;i++){\n\n            // }\n    \n        //     if(state.numberArray[0] === 0){\n        //         return{\n        //             ...state,\n        //             numberArray:state.numberArray = opNan\n        //         }\n        //     }\n        //     /* If repeated sequential presses to equal return NAN */\n        //     else if(state.numberArray[len-1] == opNan){\n        //         return{\n        //             ...state,\n        //             numberArray:state.numberArray\n        //         }\n        //     }\n        //     /* If n display that n = n, edge condition inplaced if \n        //     = is hit consecutively */\n        //     else if(state.numberArray[0] != opEqual){\n        //         if(flag == true){\n        //             return {\n        //                 ...state\n        //             }\n        //         }\n        //         flag = true\n        //         return{\n        //             ...state,\n        //             numberArray:[...state.numberArray,opEqual,state.numberArray]\n        //         }\n        //     }\n        //    else{\n        //        console.log(state.numberArray)\n        //    }\n        }\n        case SUBTRACT:{\n            const len = state.numberArray.length;\n            /* If first entry is - then change to sub */\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = opSub\n                }\n            } \n            /* if n and n+1 is equal to - then just return unchanged*/\n            else if(state.numberArray[len-1] == opSub){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n            /* Else n and n+1 in array are different and concat */\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opSub)\n                }\n            }\n        }\n        case ADD:{\n            const len = state.numberArray.length;\n            /* If first entry is + then change to sub */\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = opAdd\n                }\n            }\n            /* if n and n+1 is equal to + then just return unchanged*/\n            else if(state.numberArray[len-1] == opAdd){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n            /* Else n and n+1 in array are different and concat */\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opAdd)\n                }\n            }\n        }\n        case MULTIPLY:{\n            const len = state.numberArray.length;\n            /* If first entry is * then change to mult */\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            } \n            /* if n and n+1 is equal to * then just return unchanged */\n            else if(state.numberArray[len-1] == opMult){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n            /* Else n and n+1 in array are different and concat */\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opMult)\n                }\n            }\n        }\n        case DECIMAL:{\n            const len = state.numberArray.length;\n            \n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opDec)\n                }\n            }\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n        }\n        case DIVISION:{\n            const len = state.numberArray.length;\n            /* If first entry is div  then change to mult */\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            } \n            /* if n and n+1 is equal to div then just return unchanged */\n            else if(state.numberArray[len-1] == opDiv){\n                return{\n                    ...state,\n                    numberArray:state.numberArray\n                }\n            }\n            /* Else n and n+1 in array are different and concat */\n            else{\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(opDiv)\n                }\n            }\n        }\n        case RESET:\n            /* Reset the flag for EQUAL*/\n            flag = false\n            return{\n                total:state.total = 0,\n                numberArray:state.numberArray = [0]\n            }\n        case ZERO:\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valZero)\n            }\n        case ADDONE:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valOne\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valOne)\n            }\n        case ADDTWO:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valTwo\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valTwo)\n            }\n        case ADDTHREE:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valThree\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valThree)\n            }\n        case ADDFOUR:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valFour\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valFour)\n            }\n        case ADDFIVE:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valFive\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valFive)\n            }\n        case ADDSIX:\n            if(state.numberArray[0] === 0){\n                return{\n                    ...state,\n                    numberArray:state.numberArray[0] = valSix\n                }\n            }\n            return{\n                ...state,\n                numberArray:state.numberArray.concat(valSix)\n            }\n            case ADDSEVEN:\n                if(state.numberArray[0] === 0){\n                    return{\n                        ...state,\n                        numberArray:state.numberArray[0] = valSeven\n                    }\n                }\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valSeven)\n                }\n            case ADDEIGHT:\n                if(state.numberArray[0] === 0){\n                    return{\n                        ...state,\n                        numberArray:state.numberArray[0] = valEight\n                    }\n                }\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valEight)\n                }\n            case ADDNINE:\n                if(state.numberArray[0] === 0){\n                    return{\n                        ...state,\n                        numberArray:state.numberArray[0] = valNine\n                    }\n                }\n                return{\n                    ...state,\n                    numberArray:state.numberArray.concat(valNine)\n                }\n            default:\n                return state\n    }\n}\n\nexport default reducer;","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport ContainerStyle from './ContainerStyle.css'\n\nclass CalculatorContainer extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        /* Returns math operation result from redux store*/\n        /* Declared const to hold props from store */\n        const displayResult = this.props.storeTotal\n        const displayArray = this.props.storeArray\n        const setDiv = this.props.division\n        const setAdd = this.props.add\n        const setReset = this.props.reset\n        const setMultiply = this.props.multiply\n        const setSubtract = this.props.subtract\n        const setDecimal = this.props.decimal\n        const setEqual = this.props.equal\n        const addZero = this.props.addZero\n        const addOne = this.props.addOne\n        const addTwo = this.props.addTwo\n        const addThree = this.props.addThree\n        const addFour = this.props.addFour\n        const addFive = this.props.addFive\n        const addSix = this.props.addSix\n        const addSeven = this.props.addSeven\n        const addEight = this.props.addEight\n        const addNine = this.props.addNine\n\n        /*Button styling */\n        const styleButton = {\n            backgroundColor:'rgb(193, 196, 211)',\n            border:'.1px solid black'\n        }\n        const styleButtonEq = {\n            backgroundColor:'rgb(193, 196, 211)',\n            border:'.1px solid black',\n            borderTop:'none'\n        }\n\n        const styleButtonEqTwo = {\n            backgroundColor:'rgb(193, 196, 211)',\n            border:'.1px solid black',\n            borderBottom:'none',\n        }\n\n        /* Calculator Container*/\n        return(\n            <div className=\"container\">\n                <div className=\"row col-result-layout\">\n                <div className=\"col-12 col-subresult\">{displayArray}</div>\n                    <div className=\"col-12 \">{displayArray}</div>\n                </div>\n                <div style= {{backgroundColor:'yellow',}}className=\"row\">\n                    <div className=\"col-6\" style= {{border:'.5px solid black',backgroundColor:'rgb(221, 62, 97)',}}><button className ='ac-style' onClick = {setReset}>AC</button></div>\n                    <div className=\"col-3\" style= {styleButton}><button className = 'division-style' onClick ={setDiv}>/</button></div>\n                    <div className=\"col-3\" style= {styleButton}><button className ='mult-style' onClick ={setMultiply}>x</button></div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-3\" style= {styleButton}><button className='dig-seven' onClick ={addSeven}>7</button></div>\n                    <div className=\"col-3\" style= {styleButton}><button className='dig-eight' onClick ={addEight}>8</button></div>\n                    <div className=\"col-3\" style= {styleButton}><button className='dig-nine' onClick ={addNine}>9</button></div>\n                    <div className=\"col-3\" style= {styleButton}><button className='op-sub' onClick ={setSubtract}>-</button></div>\n                </div>\n                <div className=\"row\">\n                    <div style= {styleButton} className=\"col-3\"><button className='dig-four' onClick ={addFour}>4</button></div>\n                    <div style= {styleButton} className=\"col-3\"><button className='dig-five' onClick ={addFive}>5</button></div>\n                    <div style= {styleButton} className=\"col-3\"><button className='dig-six' onClick ={addSix}>6</button></div>\n                    <div style= {styleButton} className=\"col-3\"><button className='op-add' onClick ={setAdd}>+</button></div>\n                </div>\n                <div className=\"row\">\n                    <div style= {styleButton} className=\"col-3\"><button className='dig-one' onClick = {addOne}>1</button></div>\n                    <div style= {styleButton} className=\"col-3\"><button className='dig-two' onClick ={addTwo}>2</button></div>\n                    <div style= {styleButton} className=\"col-3\"><button className='dig-three' onClick ={addThree}>3</button></div>\n                    <div style= {styleButtonEqTwo} className=\"col-3\"><button className='op-equal' onClick ={setEqual}>=</button></div>\n                </div>\n                <div className=\"row\">\n                    <div style= {styleButton} className=\"col-6\"><button className='dig-zero' onClick ={addZero}>0</button></div>\n                    <div style= {styleButton} className=\"col-3\"><button className='op-dec' onClick ={setDecimal}>.</button></div>\n                    <div style= {styleButtonEq} className='col-3'></div>  \n                </div>\n            </div>\n        )\n    }\n}\n/* Mapping state to redux store */\nconst mapStateToProps = (state) => {\n    return{\n        storeTotal:state.total,\n        storeArray:state.numberArray,\n    }\n}\n/* anonymous ascynch function dispatching the action creator\n to the redux store reducer */\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        reset:() => {dispatch({type:'RESET'})},\n        division:() => {dispatch({type:'DIVISION'})},\n        multiply:() => {dispatch({type:'MULTIPLY'})},\n        equal:() => {dispatch({type:'EQUAL'})},\n        add:() => {dispatch({type:'ADD'})},\n        decimal:() => {dispatch({type:'DECIMAL'})},\n        subtract:() => {dispatch({type:'SUBTRACT'})},\n        addZero:() => {dispatch({type:'ZERO'})},\n        addOne:() => {dispatch({type:'ADDONE'})},\n        addTwo:() => {dispatch({type:'ADDTWO'})},\n        addThree:() => {dispatch({type:'ADDTHREE'})},\n        addFour:() => {dispatch({type:'ADDFOUR'})},\n        addFive:() => {dispatch({type:'ADDFIVE'})},\n        addSix:() => {dispatch({type:'ADDSIX'})},\n        addSeven:() => {dispatch({type:'ADDSEVEN'})},\n        addEight:() => {dispatch({type:'ADDEIGHT'})},\n        addNine:() => {dispatch({type:'ADDNINE'})},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CalculatorContainer)\n","import React from 'react';\nimport CalculatorContainer from './components/CalculatorContainer.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className = 'App-header'>\n        <CalculatorContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/* Redux - React Config */\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux';\nimport reducer from './store/reducer.js'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}